{"version":3,"sources":["../src/async.js"],"names":["readAsync","data","JSON","parse","console","log","name","init","fs","require","util","promisify","readFile"],"mappings":";;;uEA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACmBA,UAAU,gBAAV,CADnB;;AAAA;AACQC,4BADR;;AAEIA,+BAAKC,KAAKC,KAAL,CAAWF,IAAX,CAAL;AACAG,gCAAQC,GAAR,CAAYJ,KAAKK,IAAjB;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,I;;;;;;;AA3Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAMC,KAAGC,QAAQ,IAAR,CAAT;AACA,IAAMC,OAAKD,QAAQ,MAAR,CAAX;AACA,IAAMT,YAAUU,KAAKC,SAAL,CAAeH,GAAGI,QAAlB,CAAhB;;AAMAL","file":"async.js","sourcesContent":["\r\n//第一阶段，回调\r\n//  const fs=require('fs')\r\n// function readFile(cb){\r\n//     fs.readFile('./package.json',(err,data)=>{\r\n//         if(err) return console.log(err)\r\n//         cb(null,data)\r\n//     })\r\n// }\r\n// readFile((err,data)=>{\r\n//     if(!err){\r\n//         data=JSON.parse(data)\r\n//         console.log(data.name)\r\n//     }else{ console.log(err)}\r\n// })\r\n\r\n//第二阶段 Promise\r\n// function readPro(path){\r\n//     return new Promise((resolve,reject)=>{\r\n//      fs.readFile(path,(err,data)=>{\r\n//       if(err) reject(err)\r\n//       else  resolve(data)\r\n//      })\r\n       \r\n//     })\r\n// }\r\n// readPro('./package.json').then(data=>{\r\n//     data=JSON.parse(data)\r\n//     console.log(data.name)\r\n// }).catch(err=> console.log(err))\r\n\r\n//第三阶段 co+generator+Promise\r\n// const co=require('co')\r\n//  const util=require('util')\r\n// co(function *(){\r\n//     let data=yield util.promisify(fs.readFile)('./package.json')\r\n//     data=JSON.parse(data)\r\n//     console.log(data.name)\r\n// })\r\n\r\n//第四阶段  Async\r\nconst fs=require('fs')\r\nconst util=require('util')\r\nconst readAsync=util.promisify(fs.readFile)\r\nasync function init(){\r\n    let data=await readAsync('./package.json')\r\n    data=JSON.parse(data)\r\n    console.log(data.name)\r\n}\r\ninit()"]}